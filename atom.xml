<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Optimic&#39;s Blog</title>
  
  <subtitle>从零开始</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://optimic.github.io/"/>
  <updated>2019-01-11T12:15:13.327Z</updated>
  <id>https://optimic.github.io/</id>
  
  <author>
    <name>观樂。</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>初级复现Code-Breaking Puzzle</title>
    <link href="https://optimic.github.io/2019/01/05/%E5%88%9D%E7%BA%A7%E5%A4%8D%E7%8E%B0Code-Breaking-Puzzle/"/>
    <id>https://optimic.github.io/2019/01/05/初级复现Code-Breaking-Puzzle/</id>
    <published>2019-01-05T15:38:17.000Z</published>
    <updated>2019-01-11T12:15:13.327Z</updated>
    
    <content type="html"><![CDATA[<p>题目地址：<a href="https://code-breaking.com/" target="_blank" rel="noopener">Code-Breaking Puzzle</a></p><p>　　当时去做这题的时候看到第一题就有点迷惘，发现能看懂这段代码，但并不知道该从哪里下手，再加上哪段时间感觉貌似有点忙（虽然也说不出忙了些什么，惭愧…），然后就等着后面看其他大佬们的Writeup，12月初的时候大概也都看了也复现了一波，但是又临近期末了，又开始忙着复习了，于是这一拖再拖，成功地拖过了一年，希望在今年开个好头，而且p牛的环境还没关（感谢p牛！），还有得救，趁机把它补上记录一下。</p><h2 id="easy-function"><a href="#easy-function" class="headerlink" title="easy - function"></a>easy - function</h2><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">$action = $_GET[<span class="string">'action'</span>] ?? <span class="string">''</span>;</span><br><span class="line">$arg = $_GET[<span class="string">'arg'</span>] ?? <span class="string">''</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(preg_match(<span class="string">'/^[a-z0-9_]*$/isD'</span>, $action)) &#123;</span><br><span class="line">show_source(<span class="keyword">__FILE__</span>);</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">$action(<span class="string">''</span>, $arg);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>　　当时看了这道题，发现也就是传入的GET请求参数action中含有字母数字及下划线其中一个，就能调用下面的show_source函数了，然而这也并没什么用，查了下show_source原来就是一个对文件进行语法高亮显示的函数，无语…说明解题点应该就不是这个地方，可能是要跳过这个if进到else里面，然后就卡住了也没继续想下去了，就放弃了，然后又去大概地看了下其它的题，然而一道也没搞出来…所以最后就坐等大佬们的Writeup了…<br>　　后面看了大佬们的Writeup，发现确实是要绕过if，然后对第二个参数arg就可以控制了，就可以任意函数调用了，然后就需要找一个字符来绕过正则，还不能影响函数的调用，能绕过这个正则的字符倒是挺多的，主要是还要不能影响后面的函数，所以就fuzz跑一下：<br><img src="/2019/01/05/初级复现Code-Breaking-Puzzle/easy-function-1.png" alt=""><br>　　这里就能看到<strong>\(%5c)</strong>这个字符就可以达到上面的要求，参数也正常显示了还没报错，那么问题来了，为什么把<strong>\(%5c)</strong>反斜杠这个字符加到函数名之前不影响正常调用函数呢？具体原因p牛也给出了解释：</p><blockquote><p>php里默认命名空间是\，所有原生函数和类都在这个命名空间中。普通调用一个函数，如果直接写函数名function_name()调用，调用的时候其实相当于写了一个相对路径；而如果写\function_name()这样调用函数，则其实是写了一个绝对路径。如果你在其他namespace里调用系统类，就必须写绝对路径这种写法。</p></blockquote><p>另附 <a href="http://php.net/manual/zh/language.namespaces.rationale.php" target="_blank" rel="noopener">PHP 手册 - 命名空间</a></p><p>　　绕过了正则我们就可以找函数来控制第二个参数了，看了师傅们的Writeup后发现师傅们果然见多识广，居然发现了<code>create_function</code>这个函数可以进行代码注入，所以还是要熟悉php及其一些常见的函数漏洞，而且p牛在题目上也给出了提示…<br>大佬们的对<code>create_function</code>函数的解析：<br><a href="https://paper.seebug.org/94/" target="_blank" rel="noopener">[科普向] 解析create_function() &amp;&amp; 复现wp</a><br><a href="http://blog.51cto.com/lovexm/1743442" target="_blank" rel="noopener">PHP create_function()代码注入</a></p><p>　　<code>create_function</code>函数的第一个参数是传入的参数，第二个参数是函数的内容。简单来说这个<code>create_function</code>函数可以对第二个参数进行闭合然后跳出该函数，从而导致在这个函数后可以进行任意代码执行，造成了漏洞，所以在php7.2以后的版本中<a href="http://php.net/manual/en/function.create-function.php" target="_blank" rel="noopener">PHP 手册 - create_function</a>已被弃用，官方也不鼓励用此函数。</p><p>　　所以最后的playload：<br>用<a href="http://php.net/manual/zh/function.scandir.php" target="_blank" rel="noopener">PHP 手册 - scandir</a>函数查看文件目录：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://51.158.75.42:8087/?action=%5ccreate_function&amp;arg=1;&#125;var_dump(scandir(&quot;../&quot;));/*</span><br></pre></td></tr></table></figure></p><p><img src="/2019/01/05/初级复现Code-Breaking-Puzzle/easy-function-2.png" alt=""><br>查看flag文件得到flag：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://51.158.75.42:8087/?action=%5ccreate_function&amp;arg=1;&#125;var_dump(file_get_contents(%22../flag_h0w2execute_arb1trary_c0de%22));/*</span><br></pre></td></tr></table></figure></p><p><img src="/2019/01/05/初级复现Code-Breaking-Puzzle/easy-function-3.png" alt=""></p><h2 id="easy-pcrewaf"><a href="#easy-pcrewaf" class="headerlink" title="easy - pcrewaf"></a>easy - pcrewaf</h2><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">is_php</span><span class="params">($data)</span></span>&#123;</span><br><span class="line">    <span class="keyword">return</span> preg_match(<span class="string">'/&lt;\?.*[(`;?&gt;].*/is'</span>, $data);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">empty</span>($_FILES)) &#123;</span><br><span class="line">    <span class="keyword">die</span>(show_source(<span class="keyword">__FILE__</span>));</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">$user_dir = <span class="string">'data/'</span> . md5($_SERVER[<span class="string">'REMOTE_ADDR'</span>]);</span><br><span class="line">$data = file_get_contents($_FILES[<span class="string">'file'</span>][<span class="string">'tmp_name'</span>]);</span><br><span class="line"><span class="keyword">if</span> (is_php($data)) &#123;</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">"bad request"</span>;</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">    @mkdir($user_dir, <span class="number">0755</span>);</span><br><span class="line">    $path = $user_dir . <span class="string">'/'</span> . random_int(<span class="number">0</span>, <span class="number">10</span>) . <span class="string">'.php'</span>;</span><br><span class="line">    move_uploaded_file($_FILES[<span class="string">'file'</span>][<span class="string">'tmp_name'</span>], $path);</span><br><span class="line"></span><br><span class="line">    header(<span class="string">"Location: $path"</span>, <span class="keyword">true</span>, <span class="number">303</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>　　这题看样子是要上传php代码，还要让is_php()这函数返回false才能跳过if，那么问题来了，<code>/&lt;\?.*[(`;?&gt;].*/is</code>这个正则表达式能够匹配以<code>&lt;?</code>开头，中间或结尾含有<code>( ` ; ? &gt;</code>这五个字符其中任意一个的任意代码，但php一般都是用<code>;</code>(可加可不加结束符<code>?&gt;</code>，参考：<a href="http://php.net/manual/en/language.basic-syntax.phptags.php" target="_blank" rel="noopener">PHP 手册 - PHP tags</a>)来结尾，貌似有些情况也可以直接用结束符<code>?&gt;</code>来结尾，所以这个正则表达式貌似能把任意的php代码给匹配得到的啊，如下图所示，这样就绕不过啊，真让人头大，<del>建议放弃</del>…<br><img src="/2019/01/05/初级复现Code-Breaking-Puzzle/easy-pcrewaf-pcre.png" alt=""><br>后面看了大佬们的Writeup后知道了这正则匹配存在回溯限制(见<a href="http://php.net/manual/en/pcre.configuration.php" target="_blank" rel="noopener">PHP 手册 - Runtime Configuration</a>)，回溯次数超过了它的限制(1000000次)就返回false，利用这点就可以上传shell了。<br>参考：<br>鸟哥的讲解：<a href="http://www.laruence.com/2010/06/08/1579.html" target="_blank" rel="noopener">深悉正则(pcre)最大回溯/递归限制</a><br>p牛的Writeup：<a href="https://www.leavesongs.com/PENETRATION/use-pcre-backtrack-limit-to-bypass-restrict.html" target="_blank" rel="noopener">PHP利用PCRE回溯次数限制绕过某些安全限制</a></p><p>利用p牛写的poc就可以得到文件地址了：<br><img src="/2019/01/05/初级复现Code-Breaking-Puzzle/easy-pcrewaf-1.png" alt=""><br>然后就同第一题那样就能拿到flag了：<br><img src="/2019/01/05/初级复现Code-Breaking-Puzzle/easy-pcrewaf-2.png" alt=""><br><img src="/2019/01/05/初级复现Code-Breaking-Puzzle/easy-pcrewaf-3.png" alt=""></p><h2 id="easy-phplimit"><a href="#easy-phplimit" class="headerlink" title="easy - phplimit"></a>easy - phplimit</h2><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">if</span>(<span class="string">';'</span> === preg_replace(<span class="string">'/[^\W]+\((?R)?\)/'</span>, <span class="string">''</span>, $_GET[<span class="string">'code'</span>])) &#123;    </span><br><span class="line">    <span class="keyword">eval</span>($_GET[<span class="string">'code'</span>]);</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">    show_source(<span class="keyword">__FILE__</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>　　这道题看着代码挺短，但看到<code>(?R)</code>还有点迷，查了下发现这是正则匹配里的递归模式，下面是递归模式的详解：<br>鸟哥的讲解：<a href="http://www.laruence.com/2011/09/30/2179.html" target="_blank" rel="noopener">PHP正则之递归匹配</a><br><a href="http://php.net/manual/zh/regexp.reference.recursive.php" target="_blank" rel="noopener">PHP 手册 - 递归模式</a><br>　　简单来说就是当匹配到<code>(?R)</code>的时候又继续从头开始匹配，那么这道题的<code>/[^\W]+\((?R)?\)/</code>这个正则表达式开始是<code>[^\W]</code>能匹配任意字母、数字或下划线(_)，也就相当于<code>[a-zA-Z0-9_]</code>，后面的<code>\(</code>就匹配<code>(</code>，然后到<code>(?R)</code>开始从头匹配，又从<code>[^\W]</code>开始匹配，如果匹配不到就往后面匹配，<code>\)</code>就匹配<code>)</code>，所以这个正则表达式相当于匹配不带参数的函数，也可以是以不带参数的函数为参数的函数，类似<code>a(b(c()))</code>这样的就可以匹配得到。<br>　　但这道题是将传入的GET请求参数code进行正则匹配后将匹配到的替换为空（<a href="http://php.net/manual/zh/function.preg-replace.php" target="_blank" rel="noopener">PHP 手册 - preg_replace</a>），将替换后得到的结果与’;’作对比，如果完全相同则执行传入的代码，所以如果要读取文件路径这就是个难点，毕竟要传入不能带参数的函数才能够执行…<br>　　看了师傅们的Writeup后知道了<code>get_defined_vars</code>（<a href="http://php.net/manual/zh/function.get-defined-vars.php" target="_blank" rel="noopener">PHP 手册 - get_defined_vars</a>）这个函数可以获取全局所有的变量，那我们打印出来看下：<br><img src="/2019/01/05/初级复现Code-Breaking-Puzzle/easy-phplimit-1.png" alt=""><br>这里就可以看到GET的第一个值为我们刚传进去的code参数，那我们再传一个参数看看：<br><img src="/2019/01/05/初级复现Code-Breaking-Puzzle/easy-phplimit-2.png" alt=""><br>参数a也传进去了，所以在这里我们可以用<a href="http://php.net/manual/zh/function.current.php" target="_blank" rel="noopener">current</a>或者<a href="http://php.net/manual/zh/function.reset.php" target="_blank" rel="noopener">reset</a>函数都可以获取数组的第一个元素的值：<br><img src="/2019/01/05/初级复现Code-Breaking-Puzzle/easy-phplimit-3.png" alt=""><br>接下来就可以用<a href="http://php.net/manual/zh/function.next.php" target="_blank" rel="noopener">next</a>函数来获取该数组的下一个（也就是第二个）元素的值：<br><img src="/2019/01/05/初级复现Code-Breaking-Puzzle/easy-phplimit-4.png" alt=""><br>这样，执行该函数就能得到文件路径及flag了：<br><img src="/2019/01/05/初级复现Code-Breaking-Puzzle/easy-phplimit-5.png" alt=""><br><img src="/2019/01/05/初级复现Code-Breaking-Puzzle/easy-phplimit-6.png" alt=""></p><p>　　<strong>差不多了，那就先到这吧…<br>　　To be continued?…Maybe…</strong></p><hr><p>复现的时候参考了以下各位师傅们的Writeup：<br>l3m0n：<a href="https://www.cnblogs.com/iamstudy/articles/code_breaking_writeup.html" target="_blank" rel="noopener">code-breaking writeup</a><br>f1sh：<a href="http://f1sh.site/2018/11/25/code-breaking-puzzles%E5%81%9A%E9%A2%98%E8%AE%B0%E5%BD%95/" target="_blank" rel="noopener">Code-Breaking Puzzles做题记录</a><br>酉酉囧：<a href="http://www.youyouj.top/index.php/2018/12/09/%E4%BB%A3%E7%A0%81%E5%AE%A1%E8%AE%A1%E7%9F%A5%E8%AF%86%E6%98%9F%E7%90%83code-breaking-puzzles%E5%AD%A6%E4%B9%A0%E8%AE%B0%E5%BD%95/" target="_blank" rel="noopener">代码审计CODE-BREAKING PUZZLES学习记录</a><br>Kingkk：<a href="http://www.kingkk.com/2018/11/Code-Breaking-Puzzles-题解-学习篇/" target="_blank" rel="noopener">Code-Breaking Puzzles 题解&amp;学习篇</a><br>LoRexxar：<a href="https://www.lorexxar.cn/2018/12/07/codingbreak-wp/" target="_blank" rel="noopener">Code Breaking挑战赛 Writeup</a><br>By七友：<a href="https://www.cnblogs.com/Byqiyou/p/10187709.html" target="_blank" rel="noopener">Code-Breaking Puzzles做题记录</a><br>Blacsheep：<a href="https://blog.blacsheep.cn/2018/11/30/easyfunction%E7%AE%80%E5%8D%95%E8%AE%B0%E5%BD%95/" target="_blank" rel="noopener">ph师傅的代码审计星球</a><br>fnmsd：<a href="https://blog.csdn.net/fnmsd/article/details/84556522" target="_blank" rel="noopener">Code-Breaking Puzzles 做题记录</a><br>eustiar：<a href="http://eustiar.tk/archives/227" target="_blank" rel="noopener">代码审计知识星球</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;题目地址：&lt;a href=&quot;https://code-breaking.com/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Code-Breaking Puzzle&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;　　当时去做这题的时候看到第一题就有点迷惘，发现能看懂这段代码，
      
    
    </summary>
    
      <category term="技术" scheme="https://optimic.github.io/categories/%E6%8A%80%E6%9C%AF/"/>
    
      <category term="CTF" scheme="https://optimic.github.io/categories/%E6%8A%80%E6%9C%AF/CTF/"/>
    
    
      <category term="CTF" scheme="https://optimic.github.io/tags/CTF/"/>
    
      <category term="Web" scheme="https://optimic.github.io/tags/Web/"/>
    
      <category term="Php" scheme="https://optimic.github.io/tags/Php/"/>
    
      <category term="Writeup" scheme="https://optimic.github.io/tags/Writeup/"/>
    
  </entry>
  
  <entry>
    <title>十月的最后一天</title>
    <link href="https://optimic.github.io/2018/10/31/2018%E5%B9%B4%E5%8D%81%E6%9C%88%E7%9A%84%E6%9C%80%E5%90%8E%E4%B8%80%E5%A4%A9/"/>
    <id>https://optimic.github.io/2018/10/31/2018年十月的最后一天/</id>
    <published>2018-10-31T13:31:00.000Z</published>
    <updated>2018-10-31T15:20:45.625Z</updated>
    
    <content type="html"><![CDATA[<p>　　前几天看室友在搭这东西再加上可能有点闲就顺便陪着又搞了下这个东西，还换了个主题，年初的时候搭好了也不知道写些什么好，于是就搁置了很久的样子。<br>　　其实搭好了也不太清楚会写些什么，那就放在那吧，随缘就行，写不写关键还是看心情，想写的时候就写呗。<br>　　一个多学期（可能一学期加上寒暑假？）都没碰过博客这东西了吧，这又开学了大概两个月了，可能是该写点东西记录下生活了。（其实可能也不止于生活…<br>　　大二的生活还是有点忙碌，课又多，专业课不多甚至没有，看来还是自学为主，主要还是基础课多，真是令人头大，还是要好好学，争取不挂科，还是毕业要紧。<br>　　最近看又有消息推说互联网到寒冬了，各大互联网公司都开始收紧了，其实感觉也不止互联网行业，应该说是包括但不限于互联网的行业都面临着这样的问题，这样看来的话经济可能要出问题了，具体的也可以去看看知乎上大佬们的讨论，（但感觉刷知乎还是有点费时间的说，额…<br>　　这两天是怎么了，秋天果然是凋零的季节，金庸老先生去世了，留下了他的侠客精神以及经典的传世著作，央视名嘴《非常6+1》的主持人李咏也走了，小时候还看他的节目，真没想到居然这么早就走了，真是人生无常，世事难料啊，唉，这两个月去世的文艺界的大家有点多，真是令人感到些许忧伤，但令我印象较深的还是这两位了，可能九零后已经失去了…<br>　　十月也要结束了，马上也就十一月了，离2019年也不远了…希望下个月能更好吧！Hello November！</p><iframe frameborder="no" border="0" marginwidth="0" marginheight="0" width="330" height="86" src="//music.163.com/outchain/player?type=2&id=31134451&auto=1&height=66"></iframe>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;　　前几天看室友在搭这东西再加上可能有点闲就顺便陪着又搞了下这个东西，还换了个主题，年初的时候搭好了也不知道写些什么好，于是就搁置了很久的样子。&lt;br&gt;　　其实搭好了也不太清楚会写些什么，那就放在那吧，随缘就行，写不写关键还是看心情，想写的时候就写呗。&lt;br&gt;　　一个多学期
      
    
    </summary>
    
      <category term="生活随笔" scheme="https://optimic.github.io/categories/%E7%94%9F%E6%B4%BB%E9%9A%8F%E7%AC%94/"/>
    
    
      <category term="生活随笔" scheme="https://optimic.github.io/tags/%E7%94%9F%E6%B4%BB%E9%9A%8F%E7%AC%94/"/>
    
  </entry>
  
  <entry>
    <title>Hello World</title>
    <link href="https://optimic.github.io/2018/01/20/hello-world/"/>
    <id>https://optimic.github.io/2018/01/20/hello-world/</id>
    <published>2018-01-20T15:06:58.218Z</published>
    <updated>2018-01-20T15:06:58.219Z</updated>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/" target="_blank" rel="noopener">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/" target="_blank" rel="noopener">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html" target="_blank" rel="noopener">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues" target="_blank" rel="noopener">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">"My New Post"</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html" target="_blank" rel="noopener">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html" target="_blank" rel="noopener">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html" target="_blank" rel="noopener">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/deployment.html" target="_blank" rel="noopener">Deployment</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;Welcome to &lt;a href=&quot;https://hexo.io/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Hexo&lt;/a&gt;! This is your very first post. Check &lt;a href=&quot;https://hexo.
      
    
    </summary>
    
    
  </entry>
  
</feed>
